---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    fabric8.io/git-commit: 17e38b8316f831fe3cfeff96cc2acc2ee89243d2
    fabric8.io/iconUrl: img/icons/camel.svg
    fabric8.io/git-branch: master
    fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=spring-boot-camel-swagger-ui&var-version=${project.version}
  labels:
    app: ${project.artifactId}
    provider: fabric8
    version: ${project.version}
    group: ${project.groupId}
  name: ${project.artifactId}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    app: ${project.artifactId}
    provider: fabric8
    group: ${project.groupId}
  strategy:
    rollingParams:
      timeoutSeconds: 3600
    type: Rolling
  template:
    metadata:
      annotations:
        fabric8.io/git-commit: 17e38b8316f831fe3cfeff96cc2acc2ee89243d2
        fabric8.io/iconUrl: img/icons/camel.svg
        fabric8.io/git-branch: master
        fabric8.io/metrics-path: dashboard/file/camel-routes.json/?var-project=spring-boot-camel-swagger-ui&var-version=${project.version}
      labels:
        app: ${project.artifactId}
        provider: fabric8
        version: ${project.version}
        group: ${project.groupId}
    spec:
      serviceAccountName: ${project.artifactId}
      volumes:
        - name: ${project.artifactId}-secret
          secret:
            # The secret must be created before deploying this application
            secretName: ${project.artifactId}
        - name: ${project.artifactId}-config
          configMap:
            name: ${project.artifactId}
            items:
            - key: application.yml
              path: application.yml
      containers:
      - env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GREETING_PREFIX
          valueFrom:
            configMapKeyRef:
              name: ${project.artifactId}-env
              key: greeter.prefix
        - name: JAVA_APP_DIR
          value: /deployments
        - name: JAVA_OPTIONS
          value: -Dspring.profiles.active=
        image: ${project.artifactId}:latest
        resources:
          requests:
            cpu: "0.2"
            memory: 256Mi
          limits:
            cpu: "1.0"
            memory: 256Mi
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 180
        name: spring-boot
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        - containerPort: 9779
          name: prometheus
          protocol: TCP
        - containerPort: 8778
          name: jolokia
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 10
        securityContext:
          privileged: false
        volumeMounts:
          - name: ${project.artifactId}-secret
            mountPath: /etc/secrets/${project.artifactId}
            readOnly: true
          - name: ${project.artifactId}-config
            mountPath: /deployments/config
            readOnly: true
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - spring-boot
      from:
        kind: ImageStreamTag
        name: ${project.artifactId}:latest
    type: ImageChange
